<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:component-scan base-package="xyz.wickc">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <import resource="classpath:spring/*"/>


<!--    Spring 和 Mybatis 整合相关配置-->
<!--
            使用 Druid 数据库连接池
            实际上配置的方式与 DBCP 十分的类似!

            DataSource 配置属性
                username 数据库用户名
                password 数据库密码
                url 数据库服务器地址
                driverClassName 数据库对应的 JDBC 驱动类名
                    实际上此项是可以不配的,因为内部可以根据  URL 来 识别对应的数据库类型!
               maxActive 最大连接数

               详细可以看 https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8


-->

<!--    将 JDBC 的连接信息抽离到 property 文件中!-->
    <context:property-placeholder location="classpath:db.properties"/>

<!--    配置 DataSource 类-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="maxActive" value="1000"/>
    </bean>

<!--    配置Mybatis的 SqlSessionFactory-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">

<!--        配置 Mybatis 的主配置文件,并注入DataSource!-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>

<!--        使用通配符的方式来导入所有的 Mapper 配置文件-->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*"/>
    </bean>

<!--    将 Mapper 接口添加到 IOC 容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="xyz.wickc.jdbcpool.dao"/>
    </bean>

<!--    设置事务相关设置-->
<!--    配置 事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>